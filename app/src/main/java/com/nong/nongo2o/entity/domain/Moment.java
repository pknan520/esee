package com.nong.nongo2o.entity.domain;import android.os.Parcel;import android.os.Parcelable;import com.nong.nongo2o.entity.base.PagingEntity;import com.nong.nongo2o.entity.bean.SimpleUser;import java.util.Date;/** * <p>Description: 实体类Entity <p> * <p>Module:	 <p> * * @author wisdom * @date: 2017-07-18 21:20:28 * @since V1.0 */public class Moment extends PagingEntity implements Parcelable {    /**     * 动态编码     */    private String momentCode;    /**     * 用户编码     */    private SimpleUser user;    private String userCode;    /**     * 关联商品编码     */    private Goods goods;    private String goodsCode;    /**     * 头部图片     */    private String headerImg;    /**     * 标题     */    private String title;    /**     * 内容     */    private String content;    /**     * 内容图片     */    private String contentImg;    /**     * 省编码     */    private String provinceCode;    /**     * 市编码     */    private String cityCode;    /**     * 区编码     */    private String areaCode;    /**     * 点赞数     */    private int favorite;    public String getMomentCode() {        return this.momentCode;    }    public void setMomentCode(String momentCode) {        this.momentCode = momentCode;    }    public String getUserCode() {        return this.userCode;    }    public void setUserCode(String userCode) {        this.userCode = userCode;    }    public String getGoodsCode() {        return this.goodsCode;    }    public void setGoodsCode(String goodsCode) {        this.goodsCode = goodsCode;    }    public String getHeaderImg() {        return this.headerImg;    }    public void setHeaderImg(String headerImg) {        this.headerImg = headerImg;    }    public String getTitle() {        return this.title;    }    public void setTitle(String title) {        this.title = title;    }    public String getContent() {        return this.content;    }    public void setContent(String content) {        this.content = content;    }    public String getContentImg() {        return this.contentImg;    }    public void setContentImg(String contentImg) {        this.contentImg = contentImg;    }    public String getProvinceCode() {        return this.provinceCode;    }    public void setProvinceCode(String provinceCode) {        this.provinceCode = provinceCode;    }    public String getCityCode() {        return this.cityCode;    }    public void setCityCode(String cityCode) {        this.cityCode = cityCode;    }    public String getAreaCode() {        return this.areaCode;    }    public void setAreaCode(String areaCode) {        this.areaCode = areaCode;    }    public Goods getGoods() {        return goods;    }    public void setGoods(Goods goods) {        this.goods = goods;    }    public SimpleUser getUser() {        return user;    }    public void setUser(SimpleUser user) {        this.user = user;    }    public int getFavorite() {        return favorite;    }    public void setFavorite(int favorite) {        this.favorite = favorite;    }    /**     * Parcelable     * @return     */    @Override    public int describeContents() {        return 0;    }    @Override    public void writeToParcel(Parcel dest, int flags) {        dest.writeString(this.momentCode);        dest.writeSerializable(this.user);        dest.writeString(this.userCode);        dest.writeSerializable(this.goods);        dest.writeString(this.goodsCode);        dest.writeString(this.headerImg);        dest.writeString(this.title);        dest.writeString(this.content);        dest.writeString(this.contentImg);        dest.writeString(this.provinceCode);        dest.writeString(this.cityCode);        dest.writeString(this.areaCode);        dest.writeInt(this.favorite);        dest.writeValue(this.status);        dest.writeString(this.tenantCode);        dest.writeStringList(this.companyCodes);        dest.writeStringList(this.siteCodes);        dest.writeStringList(this.whCodes);        dest.writeLong(this.createTime != null ? this.createTime.getTime() : -1);        dest.writeString(this.createUserId);        dest.writeLong(this.updateTime != null ? this.updateTime.getTime() : -1);        dest.writeString(this.updateUserId);        dest.writeString(this.remark);        dest.writeString(this.id);        dest.writeValue(this.recVer);    }    public Moment() {    }    protected Moment(Parcel in) {        this.momentCode = in.readString();        this.user = (SimpleUser) in.readSerializable();        this.userCode = in.readString();        this.goods = (Goods) in.readSerializable();        this.goodsCode = in.readString();        this.headerImg = in.readString();        this.title = in.readString();        this.content = in.readString();        this.contentImg = in.readString();        this.provinceCode = in.readString();        this.cityCode = in.readString();        this.areaCode = in.readString();        this.favorite = in.readInt();        this.status = (Integer) in.readValue(Integer.class.getClassLoader());        this.tenantCode = in.readString();        this.companyCodes = in.createStringArrayList();        this.siteCodes = in.createStringArrayList();        this.whCodes = in.createStringArrayList();        long tmpCreateTime = in.readLong();        this.createTime = tmpCreateTime == -1 ? null : new Date(tmpCreateTime);        this.createUserId = in.readString();        long tmpUpdateTime = in.readLong();        this.updateTime = tmpUpdateTime == -1 ? null : new Date(tmpUpdateTime);        this.updateUserId = in.readString();        this.remark = in.readString();        this.id = in.readString();        this.recVer = (Integer) in.readValue(Integer.class.getClassLoader());    }    public static final Creator<Moment> CREATOR = new Creator<Moment>() {        @Override        public Moment createFromParcel(Parcel source) {            return new Moment(source);        }        @Override        public Moment[] newArray(int size) {            return new Moment[size];        }    };}